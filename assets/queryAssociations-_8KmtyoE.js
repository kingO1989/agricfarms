import{z as i,A as u,D as l,E as d,L as y,O as f,N as $,P as S,C as g}from"./index-fVgxHRq9.js";import{p as I}from"./Association-sQyd7aZx.js";let o=class extends d{constructor(t){super(t),this.associations=[]}};i([u({type:[I],json:{write:!0}})],o.prototype,"associations",void 0),o=i([l("esri.rest.networks.support.QueryAssociationsResult")],o);const N=o;function O(t){const{returnDeletes:r,elements:n,gdbVersion:e,moment:a}=t.toJSON();return{returnDeletes:r,elements:JSON.stringify(n.map(s=>({globalId:s.globalId,networkSourceId:s.networkSourceId,terminalId:s.terminalId}))),types:JSON.stringify(t.types.map(s=>g.toJSON(s))),gdbVersion:e,moment:a}}async function b(t,r,n){const e=y(t),a={...O(r),f:"json"},s=f({...e.query,...a}),c=$(s,{...n,method:"post"}),p=`${e.path}/associations/query`,{data:m}=await S(p,c);return N.fromJSON(m)}export{b as queryAssociations};
