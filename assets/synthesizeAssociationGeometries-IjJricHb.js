import{z as a,A as r,D as u,E as y,L as d,O as h,N as l,P as x}from"./index-NW4km9vE.js";import{p as $}from"./Association-svAoYu_S.js";let i=class extends y{constructor(s){super(s),this.maxGeometryCountExceeded=!1,this.associations=[]}};a([r({type:Boolean,json:{write:!0}})],i.prototype,"maxGeometryCountExceeded",void 0),a([r({type:[$],json:{write:!0}})],i.prototype,"associations",void 0),i=a([u("esri.rest.networks.support.AssociationGeometriesResult")],i);const G=i;async function z(s,o,e){const t=d(s),n={...o.toJSON(),f:"json"},c=h({...t.query,...n});e?e.method="post":e={method:"post"};const p=l(c,e),m=`${t.path}/synthesizeAssociationGeometries`;return x(m,p).then(f=>j(f,o.outSpatialReference))}function j(s,o){const{data:e}=s,t=G.fromJSON(e);if(o)for(const n of t.associations)n.geometry.spatialReference=o.clone();return t}export{z as synthesizeAssociationGeometries};
