import{aa as a,ab as o,a6 as g,ac as m,$ as s,z as p,A as c,D as l}from"./index-NW4km9vE.js";import{m as n,u as d}from"./LayerView-_cV0iWjg.js";import{i as u}from"./GraphicContainer-L8yA4C37.js";import{r as w}from"./GraphicsView2D-wCi76wgV.js";import"./Container-_d0PUYoe.js";import"./definitions-fZptVKrk.js";import"./enums-8pc8f5Ge.js";import"./Texture-LDTHXxX7.js";import"./color-k5ML-Qw2.js";import"./enums--FbEXJ87.js";import"./VertexElementDescriptor-0hGjloLE.js";import"./number-sTjsTbdA.js";import"./BaseGraphicContainer-3s7HV7nm.js";import"./FeatureContainer-mrYLIe3O.js";import"./AttributeStoreView-o0k7pBfQ.js";import"./TiledDisplayObject-l78lqzF8.js";import"./WGLContainer-lzaaT5S9.js";import"./FramebufferObject-Co6avni6.js";import"./ProgramTemplate-k4FPSoKb.js";import"./GeometryUtils-0VW8dIAC.js";import"./alignmentUtils-XT3TYmYW.js";import"./StyleDefinition-ohiNeWtS.js";import"./config-z2KFXUcx.js";import"./earcut-mzOTrV1O.js";import"./featureConversionUtils-7fGXVCYg.js";import"./OptimizedFeature-5RGb7-P9.js";import"./OptimizedFeatureSet-smVI1ez9.js";import"./OptimizedGeometry-CbNXANBG.js";import"./visualVariablesUtils-OUi9VCxS.js";import"./cimAnalyzer-4PloUlrO.js";import"./fontUtils-wEdASFpg.js";import"./BidiEngine-8z8MVveq.js";import"./labelPoint-9ffzo4Oq.js";import"./GeometryUtils-CEMOhUyj.js";import"./Rect-pT1ASav_.js";import"./quantizationUtils-vcNQsAOV.js";import"./floatRGBA-2Pu2GrF5.js";import"./ExpandedCIM-KO68t1Rc.js";import"./util-J1Vl0i4U.js";import"./TileContainer-aK-3Rtdl.js";import"./vec3f32-6rWBPTzX.js";import"./normalizeUtilsSync-T5bqj1HP.js";import"./projectionSupport-Q3o74O_A.js";import"./json-v6EOeNTY.js";import"./Matcher-9cSv6dwR.js";import"./tileUtils-pcBJnprf.js";import"./TurboLine-tXZj03VY.js";import"./ComputedAttributeStorage-P0od61zR.js";import"./TimeOnly-LotbmVaf.js";let e=class extends n(d){constructor(){super(...arguments),this._highlightIds=new Map}attach(){this.graphicsView=new w({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this.layer.graphics,container:new u(this.view.featuresTilingScheme)}),this._updateHighlight(),this.container.addChild(this.graphicsView.container),this.addAttachHandles(this.layer.on("graphic-update",this.graphicsView.graphicUpdateHandler))}detach(){this.container.removeAllChildren(),this.graphicsView=a(this.graphicsView)}async hitTest(i){return this.graphicsView?this.graphicsView.hitTest(i).map(t=>({type:"graphic",graphic:t,mapPoint:i,layer:this.layer})):null}async fetchPopupFeatures(i){return this.graphicsView?this.graphicsView.hitTest(i).filter(t=>!!t.popupTemplate):[]}queryGraphics(){return Promise.resolve(this.graphicsView.graphics)}update(i){this.graphicsView.processUpdate(i)}moveStart(){}viewChange(){this.graphicsView.viewChange()}moveEnd(){}isUpdating(){return!this.graphicsView||this.graphicsView.updating}highlight(i){let t;typeof i=="number"?t=[i]:i instanceof o?t=[i.uid]:Array.isArray(i)&&i.length>0?t=typeof i[0]=="number"?i:i.map(h=>h&&h.uid):g.isCollection(i)&&i.length>0&&(t=i.map(h=>h&&h.uid).toArray());const r=t==null?void 0:t.filter(m);return r!=null&&r.length?(this._addHighlight(r),s(()=>this._removeHighlight(r))):s()}_addHighlight(i){for(const t of i)if(this._highlightIds.has(t)){const r=this._highlightIds.get(t);this._highlightIds.set(t,r+1)}else this._highlightIds.set(t,1);this._updateHighlight()}_removeHighlight(i){for(const t of i)if(this._highlightIds.has(t)){const r=this._highlightIds.get(t)-1;r===0?this._highlightIds.delete(t):this._highlightIds.set(t,r)}this._updateHighlight()}_updateHighlight(){var i;(i=this.graphicsView)==null||i.setHighlight(Array.from(this._highlightIds.keys()))}};p([c()],e.prototype,"graphicsView",void 0),e=p([l("esri.views.2d.layers.GraphicsLayerView2D")],e);const li=e;export{li as default};
